ARMv8-A学习笔记包含以下几个部分：
0.ARMv8-A简要介绍；
1.ARMv8-A寄存器；
2.ARMv8-A指令集介绍；
3.ARMv8-A异常模型及异常处理；
4.ARMv8-A中断处理；
5.ARMv8-A内存管理；
6.ARMv8-A缓存策略；

0.ARMv8-A简要介绍
A53处理器内部结构示意图
如图所示，其内部包括xxx等部分；

0.1 ARMv8-A支持两种执行状态：AArch64和AArch32。
Note：执行状态指的处理器运行时的环境，包括寄存器的位宽、支持的指令集、异常模型、内存管理及编程模型等。
AArch64：64位执行状态
(1)提供31个64位的通用寄存器；
(2)提供64位的PC寄存器、栈指针、异常链接寄存器；
(3)使用A64指令集；
(4)使用ARMv8异常模型，支持4个异常等级，即EL0-EL3。
(5)提供64位的内存模型；
AArch32：32位执行状态：
(1)提供13个32位的通用寄存器，另外加上PC指针，栈指针，链接寄存器；
(2)支持两套指令集，包括A32和T32(Thumb指令集)；
(3)支持ARMv7-A异常模型，基于PE模式并映射到ARMv8的异常模型中；
(4)提供32位的内存模型；

0.2 异常等级
异常等级为软件的逻辑分层提供相应的硬件支持；
(1)EL0:用户特权，用于运行普通用户程序；
(2)EL1:系统特权，用于运行操作系统内核；
(3)EL2:运行虚拟化扩展的虚拟机监控器(hypervisor);
(4)EL3:运行安全世界中的安全监视器(secure monitor);

基于安全性考虑，还分为非安全模式和安全模式，安全模式和非安全模式需要在EL3进行切换，且处理器刚启动时处于安全模式（存疑）；

1.ARMv8-A寄存器
1.1 31个通用寄存器x0/w0-X30/w30，结合ABI讲一讲各个通用寄存器的具体作用，如图1-2；
1.2 特殊寄存器，如zero寄存器，PC寄存器，SPSR处理器状态保存寄存器，异常链接寄存器ELR等，如图所示，需要注意ELR和SPSR没有level0对应的寄存器，意味着无法在level0处理异常；
1.3 PSTATE处理器状态寄存器，如图所示，可保存或设置处理器运行过程中的算术状态，异常状态、调试等功能；
system register，AArch64通过系统寄存器进行新系统设置，系统寄存器只能通过MSR和MRS指令进行访问，例如ACTLR_ELn，ELR_ELn,ESR_ELn,FAR_ELn，MIDR_ELn,MPIDR_ELn等系统寄存器；

2.ARMv8-A异常处理
attention：
EL0不能处理异常；

2.1 ARMv8中异常可分为同步异常和异步异常；
同步异常：处理器执行某条指令，该条指令直接导致处理器出现异常的情况，需要处理完该异常才能继续执行，例如访问不可访问的寄存器、执行系统调用、地址翻译或权限等级导致的数据或指令异常；
异步异常：异常出发原因与处理器当前正在执行的指令无关的异常，如中断；
在PSTATE寄存器中可设置是否屏蔽各种异常，可屏蔽的异常包括DAIF(Debug exceptions mask， SError interrupt Process state mask， IRQ interrupt Process state mask， FIQ interrupt。。。)
2.2 异常处理流程
如图为发生异常时的处理流程：
CPU会进行如下操作：1.保存PC值到ELR_ELn，保存PSTATE到SPSR_ELn，2.对于SError和同步异常，将异常原因写入ESR_ELn寄存器中；3.切换SP寄存器为目标异常等级的SP_ELt或SP_ELh;4.切换异常等级到对应的异常处理等级，并跳转到异常向量表，处理异常；
异常处理完成后通过ERET指令返回；
SCR_EL3和HCR_EL2可设置异常发生后路由到哪个异常等级处理和使用哪种执行状态；
2.3 异常向量表
异常向量表存储异常处理的跳转地址，每个异常级别EL1-3都有自己的异常向量表
如图所示每个异常向量表有4个大处理类别，分别是1.使用SP0处理当前异常等级的异常；2使用SP_ELh处理当前等级的有异常；3.运行于低异常等级且为AArch64执行状态的异常；4.运行于低异常等级且为AArch32的异常；
且每个大的处理类别为4个小异常类别：同步异常，IRQ，FIQ，SError等。

3.ARMv8-A 中断处理

4.ARMv8-A 内存管理




